version: "3.7"

services:

  fastapi-order:
    container_name: fastapi-order
    hostname: fastapi-order
    build:
      context: ./
      target: fastapi-order
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./src/fastapi-order-service/app:/usr/src/app
      # - ./storage:/mnt/fastapi-docker/storage
      - ./src/fastapi-order-service/entrypoint.sh:/usr/src/entrypoint.sh
      - ./db/postgres/models:/usr/src/models
    env_file:
      - ./src/fastapi-order-service/fastapi-order-service.env
    environment:
      - PYTHONPATH=/usr/src
    ports:
      - 8000
    depends_on:
      postgres-db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      rabbitmq-queue:
        condition: service_healthy

  click-fulfilment:
    container_name: click-fulfilment
    hostname: click-fulfilment
    build:
      context: ./
      target: click-fulfilment
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./src/click-fulfilment-service/app:/usr/src/app
      - ./src/click-fulfilment-service/entrypoint.sh:/usr/src/entrypoint.sh
      - ./db/postgres/models:/usr/src/models
    env_file:
      - ./src/click-fulfilment-service/click-fulfilment-service.env
    environment:
      - PYTHONPATH=/usr/src
    ports:
      - 8000
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq-queue:
        condition: service_healthy

  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: ./
      target: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    depends_on:
      - fastapi-order
      - click-fulfilment

  postgres-db:
    hostname: postgres-db
    container_name: postgres-db
    image: postgres:14-alpine
    env_file:
      - ./db/postgres/db.env
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5432" ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - ./db/postgres/data:/var/lib/postgresql/data
      - ./db/postgres/files:/mnt/db/
      - ./db/postgres/init.dev.sql:/docker-entrypoint-initdb.d/init.dev.sql

  redis-cache:
    hostname: redis-cache
    container_name: redis-cache
    image: redis:5-alpine
    expose:
      - 6379
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "6379" ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - "./db/redis/redis.conf:/usr/local/etc/redis/redis.conf"

  rabbitmq-queue:
    hostname: rabbitmq-queue
    container_name: rabbitmq-queue
    image: rabbitmq:3.11.13-management-alpine
    env_file:
      - ./db/rabbitmq/rabbitmq.env
    expose:
      - "5672"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 5